# Generated by Django 4.2.17 on 2024-12-19 12:34

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sector', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.PositiveIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(11)], verbose_name='Sinif')),
                ('division', models.CharField(max_length=1, verbose_name='Bölmə')),
                ('language', models.CharField(choices=[('AZ', 'Azərbaycan'), ('RU', 'Rus'), ('EN', 'İngilis')], max_length=2, verbose_name='Tədris dili')),
                ('capacity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(40)], verbose_name='Tutum')),
                ('current_students', models.PositiveIntegerField(default=0, verbose_name='Cari şagird sayı')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktivdir')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaradılma tarixi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Yenilənmə tarixi')),
                ('class_teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_class', to=settings.AUTH_USER_MODEL, verbose_name='Sinif rəhbəri')),
            ],
            options={
                'verbose_name': 'Sinif',
                'verbose_name_plural': 'Siniflər',
                'ordering': ['grade', 'division'],
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Məktəbin adı')),
                ('utis_code', models.CharField(max_length=20, unique=True, verbose_name='UTIS kodu')),
                ('school_type', models.CharField(choices=[('PRIMARY', 'İbtidai məktəb'), ('SECONDARY', 'Ümumi orta məktəb'), ('HIGH', 'Tam orta məktəb'), ('LYCEUM', 'Lisey'), ('GYMNASIUM', 'Gimnaziya')], max_length=20, verbose_name='Məktəb növü')),
                ('address', models.TextField(verbose_name='Ünvan')),
                ('phone', models.CharField(max_length=20, verbose_name='Telefon')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='E-poçt')),
                ('website', models.URLField(blank=True, verbose_name='Veb sayt')),
                ('language', models.CharField(choices=[('AZ', 'Azərbaycan'), ('RU', 'Rus'), ('EN', 'İngilis')], max_length=2, verbose_name='Tədris dili')),
                ('foundation_year', models.PositiveIntegerField(verbose_name='Təsis ili')),
                ('shift_count', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)], verbose_name='Növbə sayı')),
                ('total_students', models.PositiveIntegerField(default=0, verbose_name='Şagird sayı')),
                ('total_teachers', models.PositiveIntegerField(default=0, verbose_name='Müəllim sayı')),
                ('total_classes', models.PositiveIntegerField(default=0, verbose_name='Sinif komplekti sayı')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktivdir')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaradılma tarixi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Yenilənmə tarixi')),
                ('principal', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_school', to=settings.AUTH_USER_MODEL, verbose_name='Direktor')),
                ('sector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schools', to='sector.sector', verbose_name='Sektor')),
            ],
            options={
                'verbose_name': 'Məktəb',
                'verbose_name_plural': 'Məktəblər',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Ad')),
                ('last_name', models.CharField(max_length=50, verbose_name='Soyad')),
                ('father_name', models.CharField(max_length=50, verbose_name='Ata adı')),
                ('birth_date', models.DateField(verbose_name='Doğum tarixi')),
                ('gender', models.CharField(choices=[('M', 'Oğlan'), ('F', 'Qız')], max_length=1, verbose_name='Cins')),
                ('utis_id', models.CharField(max_length=20, unique=True, verbose_name='UTIS ID')),
                ('admission_date', models.DateField(verbose_name='Qəbul tarixi')),
                ('address', models.TextField(verbose_name='Ünvan')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Telefon')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='E-poçt')),
                ('parent_name', models.CharField(max_length=100, verbose_name='Valideynin adı')),
                ('parent_phone', models.CharField(max_length=20, verbose_name='Valideynin telefonu')),
                ('parent_email', models.EmailField(blank=True, max_length=254, verbose_name='Valideynin e-poçtu')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktivdir')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaradılma tarixi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Yenilənmə tarixi')),
                ('class_room', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='school.classroom', verbose_name='Sinif')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='school.school', verbose_name='Məktəb')),
            ],
            options={
                'verbose_name': 'Şagird',
                'verbose_name_plural': 'Şagirdlər',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='SchoolAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Telefon')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaradılma tarixi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Yenilənmə tarixi')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admins', to='school.school', verbose_name='Məktəb')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='school_admin', to=settings.AUTH_USER_MODEL, verbose_name='İstifadəçi')),
            ],
            options={
                'verbose_name': 'Məktəb administratoru',
                'verbose_name_plural': 'Məktəb administratorları',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=100, verbose_name='Fənn')),
                ('grade_type', models.CharField(choices=[('DAILY', 'Gündəlik'), ('SMALL_SUMMARY', 'Kiçik summativ'), ('BIG_SUMMARY', 'Böyük summativ'), ('YEARLY', 'İllik')], max_length=20, verbose_name='Qiymət növü')),
                ('grade', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Qiymət')),
                ('date', models.DateField(verbose_name='Tarix')),
                ('note', models.TextField(blank=True, verbose_name='Qeyd')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaradılma tarixi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Yenilənmə tarixi')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='school.student', verbose_name='Şagird')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='given_grades', to=settings.AUTH_USER_MODEL, verbose_name='Müəllim')),
            ],
            options={
                'verbose_name': 'Qiymət',
                'verbose_name_plural': 'Qiymətlər',
                'ordering': ['-date'],
            },
        ),
        migrations.AddField(
            model_name='classroom',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='school.school', verbose_name='Məktəb'),
        ),
        migrations.AlterUniqueTogether(
            name='classroom',
            unique_together={('school', 'grade', 'division')},
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Tarix')),
                ('is_present', models.BooleanField(default=True, verbose_name='İştirak edir')),
                ('absence_type', models.CharField(blank=True, choices=[('SICK', 'Xəstə'), ('EXCUSED', 'Üzrlü'), ('UNEXCUSED', 'Üzrsüz')], max_length=10, null=True, verbose_name='Qayıb növü')),
                ('note', models.TextField(blank=True, verbose_name='Qeyd')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaradılma tarixi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Yenilənmə tarixi')),
                ('recorded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recorded_attendances', to=settings.AUTH_USER_MODEL, verbose_name='Qeyd edən')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='school.student', verbose_name='Şagird')),
            ],
            options={
                'verbose_name': 'Davamiyyət',
                'verbose_name_plural': 'Davamiyyət',
                'ordering': ['-date'],
                'unique_together': {('student', 'date')},
            },
        ),
    ]
